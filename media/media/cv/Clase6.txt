Js es sincrono, una promesa sirve para hacerlo asincrono, se le delega la promesa al navegador mientras el codigo se ejecuta
Esto sirve para poder seguir trabajando mientras una tarea se ejecuta en segundo plano. fetch es una promesa.

const API_URL = 'url api'; **Se hace una constante con la api a hacer request

const request =fetch(API_URL) **Fetch es la palabra reservada para hacer la promesa para hacer una request a una api
request
    .then((response) => response.json())  ** Se parsea la respuesta
    .then((data) => console.log(data))  **Se muestra la data
    .catch((error) => console.error(error.message));   ** En caso de que haya un error se hace un catch y se muestar el error

console.log(request);



const API_URL = 'https://rickandmortyapi.com/api/character';

async function fetchData(apiurl) {
  const request = await fetch(apiurl);
  const data = await request.json();

  return data;
}

async function getCharacter() {
  try{
    const getChar = await fetchData(API_URL);
    getChar.results.forEach((character) => {
      console.log(character);
    })
  }
  catch(error){
    console.error(error.message)
  }
}

getCharacter();